{"version":3,"file":"static/webpack/static/development/pages/index.js.ba8cbae06f56538fa362.hot-update.js","sources":["webpack:///./components/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport UserList from \"../containers/user-list\";\nimport UserDetail from \"../containers/user-detail\";\nimport TaskList from \"../containers/taskList\";\nimport DoneList from \"../containers/DoneList\";\nimport taskChecked from \"../reducers/reducer-task-checked\";\nimport { addTask } from \"../actions/addTask\";\nimport { deleteTask } from \"../actions/deleteTask\";\nimport { addDue } from \"../actions/addDue\";\nimport { deleteDue } from \"../actions/deleteDue\";\nimport taskList from \"../containers/taskList\";\n\nclass todolist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tempDue: \"\",\n      tempText: \"\",\n      tempStatus: \"N\"\n    };\n  }\n\n  updateInput = event => {\n    this.setState({\n      tempText: event.target.value\n    });\n  };\n\n  updateDueDate = event => {\n    this.setState({\n      tempDue: event.target.value\n    });\n  };\n\n  handleSubmit = () => {\n    if (this.state.tempText != \"\") {\n      let due = this.state.tempDue == \"\" ? \"1970-01-01\" : this.state.tempDue;\n\n      let task = {\n        id: this.props.taskChecked.length,\n        due: due,\n        text: this.state.tempText,\n        status: this.state.tempStatus\n      };\n      this.props.addTask(task);\n\n      if (\n        this.props.taskChecked.filter(item => item.due == task.due).length < 1\n      ) {\n        this.props.addDue(task);\n      }\n\n      this.setState({\n        tempDue: \"\",\n        tempText: \"\",\n        tempStatus: \"N\"\n      });\n    } else {\n      alert(\"Please input task first\");\n    }\n  };\n\n  handleDelete = task => {\n    this.props.deleteTask(task);\n\n    if (\n      this.props.taskChecked.filter(item => item.due == task.due).length == 1\n    ) {\n      console.log(\"delete due\");\n      this.props.deleteDue(task);\n    }\n  };\n\n  render() {\n    //console.log(this.props.taskChecked);\n    return (\n      <div className=\"app\">\n        <div className=\"card\">\n          <h2>Insert New Task</h2>\n          <table border=\"0\">\n            <tr>\n              <td>\n                <b>Task Name</b>\n              </td>\n              <td>\n                <b>Due Date</b>\n              </td>\n              <td> </td>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  id=\"taskInput\"\n                  type=\"text\"\n                  placeholder=\"insert task...\"\n                  value={this.state.tempText}\n                  onChange={this.updateInput}\n                />\n              </td>\n              <td>\n                <input\n                  id=\"dueInput\"\n                  type=\"date\"\n                  value={this.state.tempDue}\n                  onChange={this.updateDueDate}\n                />\n              </td>\n              <td>\n                <button onClick={this.handleSubmit}>Add</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <div className=\"card\">\n          <h2>To Do List</h2>\n          <TaskList\n            task={this.props.taskChecked}\n            delTask={this.handleDelete}\n            duedate={this.props.duedate}\n          />\n        </div>\n        <div className=\"card\">\n          <h2>Completed</h2>\n          <DoneList task={this.props.taskChecked} delTask={this.handleDelete} />\n        </div>\n        <style jsx>\n          {\n            \".card {background:white; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); padding: 2px 16px 16px 16px; margin: 15px 20% 15px 20%;} .app{background: #f0f8ff; font-family: Arial, Helvetica, sans-serif; overflow: auto;} h2{color: #297CBB}\"\n          }\n        </style>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todo: state.todo,\n    taskChecked: state.taskChecked,\n    duedate: state.dueReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { addTask, deleteTask, addDue, deleteDue },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(todolist);\n\n/*\nconst App = () => (\n    <div>\n        <h2>Username List</h2>\n        <UserList />\n        <br />\n        <h2>Username Details</h2>\n        <UserDetail />\n    </div>\n)\n*/\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AADA;AAGA;AACA;AAfA;AAiBA;AACA;AADA;AAGA;AACA;AArBA;AAuBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAjDA;AAmDA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAzDA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;AAowDA;;;;AAzHA;AACA;AA2HA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAKA;;;;;;;;;;;;;;A","sourceRoot":""}