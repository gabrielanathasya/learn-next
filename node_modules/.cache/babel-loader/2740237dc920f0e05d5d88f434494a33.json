{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport UserList from \"../containers/user-list\";\nimport UserDetail from \"../containers/user-detail\";\nimport TaskList from \"../containers/taskList\";\nimport DoneList from \"../containers/DoneList\";\nimport taskChecked from \"../reducers/reducer-task-checked\";\nimport { addTask } from \"../actions/addTask\";\nimport { deleteTask } from \"../actions/deleteTask\";\nimport { addDue } from \"../actions/addDue\";\nimport { deleteDue } from \"../actions/deleteDue\";\n\nvar todolist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(todolist, _Component);\n\n  function todolist(props) {\n    var _this;\n\n    _classCallCheck(this, todolist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(todolist).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateInput\", function (event) {\n      _this.setState({\n        tempText: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateDueDate\", function (event) {\n      _this.setState({\n        tempDue: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      if (_this.state.tempText != \"\") {\n        _this.setState({\n          tempDue: \"No Due Date\",\n          tempText: \"\",\n          tempStatus: \"N\"\n        });\n\n        var task = {\n          id: _this.props.taskChecked.length,\n          due: _this.state.tempDue,\n          text: _this.state.tempText,\n          status: _this.state.tempStatus\n        };\n\n        _this.props.addTask(task);\n\n        _this.props.addDue(task);\n      } else {\n        alert(\"Please input task first\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelete\", function (task) {\n      _this.props.deleteTask(task);\n\n      _this.props.deleteDue(task);\n    });\n\n    _this.state = {\n      tempDue: \"No Due Date\",\n      tempText: \"\",\n      tempStatus: \"N\"\n    };\n    return _this;\n  }\n\n  _createClass(todolist, [{\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props.taskChecked);\n      return React.createElement(\"div\", {\n        className: \"jsx-1118496207\" + \" \" + \"app\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1118496207\" + \" \" + \"card\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-1118496207\"\n      }, \"Insert New Task\"), React.createElement(\"table\", {\n        border: \"0\",\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"tr\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"b\", {\n        className: \"jsx-1118496207\"\n      }, \"Task Name\")), React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"b\", {\n        className: \"jsx-1118496207\"\n      }, \"Due Date\")), React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, \" \")), React.createElement(\"tr\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"input\", {\n        id: \"taskInput\",\n        type: \"text\",\n        placeholder: \"insert task...\",\n        value: this.state.tempText,\n        onChange: this.updateInput,\n        className: \"jsx-1118496207\"\n      })), React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"input\", {\n        id: \"dueInput\",\n        type: \"date\",\n        value: this.state.tempDue,\n        onChange: this.updateDueDate,\n        className: \"jsx-1118496207\"\n      })), React.createElement(\"td\", {\n        className: \"jsx-1118496207\"\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"jsx-1118496207\"\n      }, \"Add\"))))), React.createElement(\"div\", {\n        className: \"jsx-1118496207\" + \" \" + \"card\"\n      }, React.createElement(TaskList, {\n        task: this.props.taskChecked,\n        delTask: this.handleDelete,\n        duedate: this.props.duedate\n      })), React.createElement(\"div\", {\n        className: \"jsx-1118496207\" + \" \" + \"card\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-1118496207\"\n      }, \"Completed\"), React.createElement(DoneList, {\n        task: this.props.taskChecked,\n        delTask: this.handleDelete\n      })), React.createElement(_JSXStyle, {\n        id: \"1118496207\"\n      }, [\".card.jsx-1118496207{box-shadow:0 4px 8px 0 rgba(0,0,0,0.2);-webkit-transition:0.3s;transition:0.3s;padding:2px 16px 16px 16px;margin:10px 10px 10px 10px;}\", \".app.jsx-1118496207{font-family:Arial,Helvetica,sans-serif;}\"]));\n    }\n  }]);\n\n  return todolist;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todo: state.todo,\n    taskChecked: state.taskChecked,\n    duedate: state.duedate\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addTask: addTask,\n    deleteTask: deleteTask,\n    addDue: addDue,\n    deleteDue: deleteDue\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(todolist);\n/*\nconst App = () => (\n    <div>\n        <h2>Username List</h2>\n        <UserList />\n        <br />\n        <h2>Username Details</h2>\n        <UserDetail />\n    </div>\n)\n*/","map":null,"metadata":{},"sourceType":"module"}