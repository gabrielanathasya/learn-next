{"ast":null,"code":"var _jsxFileName = \"/home/gabrielanathasya/learn-next/pages/index.jsx\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport App from '../components/App.jsx';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducerUsers from '../reducers/reducer-users.jsx';\nimport ActiveUserReducer from '../reducers/reducer-active-users.jsx';\nimport reducerTodolist from '../reducers/reducer-todolist';\nimport reducerTaskChecked from '../reducers/reducer-task-checked';\n/*\nconst Index = () => (\n    <div className=\"root\">\n        <Link href=\"/other\">\n            <a>go to other page</a>\n        </Link>\n        <style jsx>\n        {' a { background: yellow; } '}\n        </style>\n        <style jsx global>\n        {' body { background: grey; } '}\n        </style>\n\n        <App />\n    </div>\n)\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'ADD':\n            state = state + action.payload;\n            break;\n        case 'SUBTRACT':\n            state = state - action.payload;\n            break;\n    }\n    return state;\n}\n\nconst allReducers = combineReducers({\n    users: reducerUsers,\n    activeUser: ActiveUserReducer\n});\n*/\n\nvar allReducers = combineReducers({\n  todo: reducerTodolist,\n  taskChecked: reducerTaskChecked\n});\nvar store = createStore(allReducers);\n\nvar Index = function Index() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/gabrielanathasya/learn-next/pages/index.jsx"],"names":["Link","App","createStore","combineReducers","Provider","reducerUsers","ActiveUserReducer","reducerTodolist","reducerTaskChecked","allReducers","todo","taskChecked","store","Index"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;AAkBA,IAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,IAAI,EAAEH,eAD0B;AAEhCI,EAAAA,WAAW,EAAEH;AAFmB,CAAD,CAAnC;AAKA,IAAMI,KAAK,GAAGV,WAAW,CAACO,WAAD,CAAzB;;AAEA,IAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,SACV,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADU;AAAA,CAAd;;AAMA,eAAeC,KAAf","sourcesContent":["import Link from 'next/link';\nimport App from '../components/App.jsx';\nimport {createStore, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducerUsers from '../reducers/reducer-users.jsx';\nimport ActiveUserReducer from '../reducers/reducer-active-users.jsx';\nimport reducerTodolist from '../reducers/reducer-todolist';\nimport reducerTaskChecked from '../reducers/reducer-task-checked';\n/*\nconst Index = () => (\n    <div className=\"root\">\n        <Link href=\"/other\">\n            <a>go to other page</a>\n        </Link>\n        <style jsx>\n        {' a { background: yellow; } '}\n        </style>\n        <style jsx global>\n        {' body { background: grey; } '}\n        </style>\n\n        <App />\n    </div>\n)\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'ADD':\n            state = state + action.payload;\n            break;\n        case 'SUBTRACT':\n            state = state - action.payload;\n            break;\n    }\n    return state;\n}\n\nconst allReducers = combineReducers({\n    users: reducerUsers,\n    activeUser: ActiveUserReducer\n});\n*/\nconst allReducers = combineReducers({\n    todo: reducerTodolist,\n    taskChecked: reducerTaskChecked\n})\n\nconst store = createStore(allReducers);\n\nconst Index = () => (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nexport default Index"]},"metadata":{},"sourceType":"module"}