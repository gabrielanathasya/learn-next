{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport DefaultStateFn from \"../reducers/reducer-todolist\";\nvar defaultState = DefaultStateFn();\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"state sblm switch \", state, \"action\", action);\n  var newState;\n\n  switch (action.type) {\n    case \"TASK_CHECKED\":\n      console.log(\"TASK_CHECKED\"); // state = {\n      //     ...state,\n      //     status: 'Y'\n      // };\n\n      newState = state.map(function (s, i) {\n        return i === action.payload ? _objectSpread({}, s, {\n          status: \"Y\"\n        }) : s;\n      });\n      console.log(\"newState\", newState);\n      return newState;\n\n    case \"TASK_UNCHECKED\":\n      console.log(\"TASK_UNCHECKED\"); // state = {\n      //     ...state,\n      //     status: 'N'\n      // };\n      // break;\n\n      newState = state.map(function (s, i) {\n        return i === action.payload ? _objectSpread({}, s, {\n          status: \"N\"\n        }) : s;\n      });\n      console.log(\"newState\", newState);\n      return newState;\n  }\n\n  console.log(\"state setelah switch \", state);\n  return state;\n}","map":{"version":3,"sources":["/home/gabrielanathasya/learn-next/reducers/reducer-task-checked.jsx"],"names":["DefaultStateFn","defaultState","state","action","console","log","newState","type","map","s","i","payload","status"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AAEA,IAAMC,YAAY,GAAGD,cAAc,EAAnC;AAEA,eAAe,YAAuC;AAAA,MAA9BE,KAA8B,uEAAtBD,YAAsB;AAAA,MAARE,MAAQ;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,KAAlC,EAAyC,QAAzC,EAAmDC,MAAnD;AACA,MAAIG,QAAJ;;AACA,UAAQH,MAAM,CAACI,IAAf;AACE,SAAK,cAAL;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADF,CAEE;AACA;AACA;AACA;;AACAC,MAAAA,QAAQ,GAAGJ,KAAK,CAACM,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACnBA,CAAC,KAAKP,MAAM,CAACQ,OAAb,qBAA4BF,CAA5B;AAA+BG,UAAAA,MAAM,EAAE;AAAvC,aAA+CH,CAD5B;AAAA,OAAV,CAAX;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;AACA,aAAOA,QAAP;;AACF,SAAK,gBAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADF,CAEE;AACA;AACA;AACA;AACA;;AACAC,MAAAA,QAAQ,GAAGJ,KAAK,CAACM,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACnBA,CAAC,KAAKP,MAAM,CAACQ,OAAb,qBAA4BF,CAA5B;AAA+BG,UAAAA,MAAM,EAAE;AAAvC,aAA+CH,CAD5B;AAAA,OAAV,CAAX;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;AACA,aAAOA,QAAP;AAvBJ;;AAyBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,KAArC;AACA,SAAOA,KAAP;AACD","sourcesContent":["import DefaultStateFn from \"../reducers/reducer-todolist\";\n\nconst defaultState = DefaultStateFn();\n\nexport default function(state = defaultState, action) {\n  console.log(\"state sblm switch \", state, \"action\", action);\n  let newState;\n  switch (action.type) {\n    case \"TASK_CHECKED\":\n      console.log(\"TASK_CHECKED\");\n      // state = {\n      //     ...state,\n      //     status: 'Y'\n      // };\n      newState = state.map((s, i) =>\n        i === action.payload ? { ...s, status: \"Y\" } : s\n      );\n      console.log(\"newState\", newState);\n      return newState;\n    case \"TASK_UNCHECKED\":\n      console.log(\"TASK_UNCHECKED\");\n      // state = {\n      //     ...state,\n      //     status: 'N'\n      // };\n      // break;\n      newState = state.map((s, i) =>\n        i === action.payload ? { ...s, status: \"N\" } : s\n      );\n      console.log(\"newState\", newState);\n      return newState;\n  }\n  console.log(\"state setelah switch \", state);\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}