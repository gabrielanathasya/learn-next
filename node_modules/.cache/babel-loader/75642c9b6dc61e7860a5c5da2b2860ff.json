{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport DefaultStateFn from \"../reducers/reducer-todolist\";\nvar defaultState = DefaultStateFn();\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    case \"TASK_CHECKED\":\n      // state = {\n      //     ...state,\n      //     status: 'Y'\n      // };\n      //   newState = state;\n      //   newState[action.payload].status = \"Y\";\n      newState = state.map(function (s, i) {\n        return i === action.payload ? _objectSpread({}, s, {\n          status: \"Y\"\n        }) : s;\n      });\n      return newState;\n\n    case \"TASK_UNCHECKED\":\n      newState = state.map(function (s, i) {\n        return i === action.payload ? _objectSpread({}, s, {\n          status: \"N\"\n        }) : s;\n      });\n      return newState;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/gabrielanathasya/learn-next/reducers/reducer-task-checked.jsx"],"names":["DefaultStateFn","defaultState","state","action","newState","type","map","s","i","payload","status"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AAEA,IAAMC,YAAY,GAAGD,cAAc,EAAnC;AAEA,eAAe,YAAuC;AAAA,MAA9BE,KAA8B,uEAAtBD,YAAsB;AAAA,MAARE,MAAQ;AACpD,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,cAAL;AACE;AACA;AACA;AACA;AAEA;AACA;AAEAD,MAAAA,QAAQ,GAAGF,KAAK,CAACI,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACnBA,CAAC,KAAKL,MAAM,CAACM,OAAb,qBAA4BF,CAA5B;AAA+BG,UAAAA,MAAM,EAAE;AAAvC,aAA+CH,CAD5B;AAAA,OAAV,CAAX;AAGA,aAAOH,QAAP;;AAEF,SAAK,gBAAL;AACEA,MAAAA,QAAQ,GAAGF,KAAK,CAACI,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACnBA,CAAC,KAAKL,MAAM,CAACM,OAAb,qBAA4BF,CAA5B;AAA+BG,UAAAA,MAAM,EAAE;AAAvC,aAA+CH,CAD5B;AAAA,OAAV,CAAX;AAGA,aAAOH,QAAP;AAnBJ;;AAqBA,SAAOF,KAAP;AACD","sourcesContent":["import DefaultStateFn from \"../reducers/reducer-todolist\";\n\nconst defaultState = DefaultStateFn();\n\nexport default function(state = defaultState, action) {\n  let newState;\n  switch (action.type) {\n    case \"TASK_CHECKED\":\n      // state = {\n      //     ...state,\n      //     status: 'Y'\n      // };\n\n      //   newState = state;\n      //   newState[action.payload].status = \"Y\";\n\n      newState = state.map((s, i) =>\n        i === action.payload ? { ...s, status: \"Y\" } : s\n      );\n      return newState;\n\n    case \"TASK_UNCHECKED\":\n      newState = state.map((s, i) =>\n        i === action.payload ? { ...s, status: \"N\" } : s\n      );\n      return newState;\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}