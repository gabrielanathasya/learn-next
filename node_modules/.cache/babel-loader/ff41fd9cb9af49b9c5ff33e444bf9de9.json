{"ast":null,"code":"var _jsxFileName = \"/home/gabrielanathasya/learn-next/pages/index.jsx\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport App from \"../components/App.jsx\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducerUsers from \"../reducers/reducer-users.jsx\";\nimport ActiveUserReducer from \"../reducers/reducer-active-users.jsx\";\nimport reducerTodolist from \"../reducers/reducer-todolist\";\nimport reducerTaskChecked from \"../reducers/reducer-task-checked\";\nimport reducerDueDate from \"../reducers/reducer-duedate-data\";\n/*\nconst Index = () => (\n    <div className=\"root\">\n        <Link href=\"/other\">\n            <a>go to other page</a>\n        </Link>\n        <style jsx>\n        {' a { background: yellow; } '}\n        </style>\n        <style jsx global>\n        {' body { background: grey; } '}\n        </style>\n\n        <App />\n    </div>\n)\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'ADD':\n            state = state + action.payload;\n            break;\n        case 'SUBTRACT':\n            state = state - action.payload;\n            break;\n    }\n    return state;\n}\n\nconst allReducers = combineReducers({\n    users: reducerUsers,\n    activeUser: ActiveUserReducer\n});\n*/\n\nvar allReducers = combineReducers({\n  todo: reducerTodolist,\n  taskChecked: reducerTaskChecked,\n  duedate: reducerDueDate\n});\nvar store = createStore(allReducers);\n\nvar Index = function Index() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/gabrielanathasya/learn-next/pages/index.jsx"],"names":["Link","App","createStore","combineReducers","Provider","reducerUsers","ActiveUserReducer","reducerTodolist","reducerTaskChecked","reducerDueDate","allReducers","todo","taskChecked","duedate","store","Index"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;AAkBA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,IAAI,EAAEJ,eAD4B;AAElCK,EAAAA,WAAW,EAAEJ,kBAFqB;AAGlCK,EAAAA,OAAO,EAAEJ;AAHyB,CAAD,CAAnC;AAMA,IAAMK,KAAK,GAAGZ,WAAW,CAACQ,WAAD,CAAzB;;AAEA,IAAMK,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADY;AAAA,CAAd;;AAQA,eAAeC,KAAf","sourcesContent":["import Link from \"next/link\";\nimport App from \"../components/App.jsx\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducerUsers from \"../reducers/reducer-users.jsx\";\nimport ActiveUserReducer from \"../reducers/reducer-active-users.jsx\";\nimport reducerTodolist from \"../reducers/reducer-todolist\";\nimport reducerTaskChecked from \"../reducers/reducer-task-checked\";\nimport reducerDueDate from \"../reducers/reducer-duedate-data\";\n/*\nconst Index = () => (\n    <div className=\"root\">\n        <Link href=\"/other\">\n            <a>go to other page</a>\n        </Link>\n        <style jsx>\n        {' a { background: yellow; } '}\n        </style>\n        <style jsx global>\n        {' body { background: grey; } '}\n        </style>\n\n        <App />\n    </div>\n)\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'ADD':\n            state = state + action.payload;\n            break;\n        case 'SUBTRACT':\n            state = state - action.payload;\n            break;\n    }\n    return state;\n}\n\nconst allReducers = combineReducers({\n    users: reducerUsers,\n    activeUser: ActiveUserReducer\n});\n*/\nconst allReducers = combineReducers({\n  todo: reducerTodolist,\n  taskChecked: reducerTaskChecked,\n  duedate: reducerDueDate\n});\n\nconst store = createStore(allReducers);\n\nconst Index = () => (\n  <Provider store={store}>\n    <tbody>\n      <App />\n    </tbody>\n  </Provider>\n);\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}